@startuml class diagram
'https://plantuml.com/class-diagram

class VendingMachine{
    -__ProductManager
    -__MoneyManager
    -__DataReader
    -__VendingMachinePrinter
    -__specificProductsType : Boolean
    -__sChosenProductsType : String
    -__init__(pm, mm, vmp)
    +void StartVendingMachine()
    +void __CollectCoinsFromUser()
    +Product __GetProductSelectionFromUser()
    +void __HandlePurchase(product)
}

class VendingMachinePrinter{
    +void InvalidCoin()
    +void NotEnoughMoney(iPrice, iCustomerMoney)
    +void NotEnoughChange()
    +void InvalidProductUId()
    +void InitialMessage(sProductsType, iCustomerMoney, sProductType)
    +void ProductPayment(sProductName)
    +void ChangeMoney(iChangeMoney)
    +void __Dict2PrintList(dProducts)
}

class MoneyManager{
    -__Calculator
    -__DataReader
    -dVmCoins : Dictionary
    -dCostumerCoins : Dictionary
    -dCostumerChangeCoins : Dictionary
    -_iVmChangeMoney : Integer
    -_iCustomerMoney : Integer
    -_iCustomerChangeMoney : Integer
    -Just Getters - init from JSON
    -__init__(sMoneyJsonPath: str)
    +void DumpMoney(sJsonMoneyFilePath, sJsonCoinsFilePath)
    +AddToCustomerCoins(coin)
    +bool CustomerHaveEnoughMoney(ProductPrice)
    +bool VmHaveEnoughChange(ProductPrice)
    +int __sumCoinsDict(dDict)
    +__initDCostumerCoins()
}

class Calculator{
    +minimalMatch CalculateMinimum(coins, change)
    +matches __CalculateFinite(coins, change, start)
}

class DataReader{
    +dProducts ReadProductsDataFromFile(sProductsJsonFilePath)
    +dMoney ReadMoneyDataFromFile(sMoneyJsonFilePath)
    +dMoney ReadCoinsDataFromFile(sCoinsJsonFilePath)
    +filteredProducts FilterData(Products, sProductType, specificProductsType)
}

class Product{
    -_iUid : Integer
    -_sName : String
    -_iPrice : Integer
    -_iQuantity : Integer
    -_sProductFamily : String
    -__init__(iUid, sName, iPrice, iQuantity, sProductFamily)
    -Just Getters - init from JSON
    +void Reduce1FromQuantity()
}

class Drink{
    -bSparkling : Boolean
}

class Snack{
    -bSweet : Boolean
}

class Consts{
    CURRENCY_TYPE
    JSON_DIR_PATH_TESTS
    JSON_DIR_PATH_PROGRAM
    PRODUCT_DATA_JSON_FILE
    MONEY_DATA_JSON_FILE
    COINS_DATA_JSON_FILE
    PRODUCT_DATA_DUMP_JSON_FILE
    MONEY_DATA_DUMP_JSON_FILE
    COINS_DATA_DUMP_JSON_FILE
    DRINK
    SNACK
    ALL

    another few consts which used for Serialization
}

abstract class ProductManager{
    - _dProducts : Dict
    -__init__(sProductsJsonFilePath)
    -Just Getters - init from JSON
    +lAvailableProducts GetAvailableProducts()
    +void RemoveProduct(iUid)
    +void DumpProducts(sJsonFilePath)
    +void UpdateQuantity(iProductId)
}

Product <|-- Drink
Product <|-- Snack
VendingMachine "1" *-- "1" ProductManager : have >
VendingMachine "1" *-- "1" MoneyManager : have >
VendingMachine "1" *-- "1" VendingMachinePrinter : have >
VendingMachine "1" *-- "1" DataReader : have >
ProductManager "1" *-- "1" DataReader : have >
MoneyManager "1" *-- "1" Calculator : have >
ProductManager "1" *-- "many" Product : have >

@enduml